#Samruddhi Pendurkar
from keras.models import Sequential
from keras.layers import Conv2D
model = Sequential()
model.add(Conv2D(32, input_shape=(28,28,3),
kernel_size = (5,5),
padding='same',
use_bias=False))
model.add(Conv2D(17, (3,3), padding='same', use_bias=False))
model.add(Conv2D(13, (3,3), padding='same', use_bias=False))
model.add(Conv2D(7, (3,3), padding='same', use_bias=False))
model.compile(loss = 'categorical_crossentropy', optimizer='adam')
model.summary()
Model: "sequential"
_________________________________________________________________
 Layer (type) Output Shape Param # 
=================================================================
 conv2d (Conv2D) (None, 28, 28, 32) 2400 
 
 conv2d_1 (Conv2D) (None, 28, 28, 17) 4896 
 conv2d_2 (Conv2D) (None, 28, 28, 13) 1989 
 conv2d_3 (Conv2D) (None, 28, 28, 7) 819 
=================================================================
Total params: 10,104
Trainable params: 10,104
Non-trainable params: 0
_________________________________________________________________
model = Sequential()
model.add(Conv2D(32, input_shape=(28,28,3),
kernel_size = (5,5),
padding='same',
use_bias=True))
model.add(Conv2D(17, (3,3), padding='same', use_bias=True))
model.add(Conv2D(13, (3,3), padding='same', use_bias=True))
model.add(Conv2D(7, (3,3), padding='same', use_bias=True))
model.compile(loss = 'categorical_crossentropy', optimizer='adam')
model.summary()
Model: "sequential_1"
_________________________________________________________________
 Layer (type) Output Shape Param # 
=================================================================
 conv2d_4 (Conv2D) (None, 28, 28, 32) 2432 
 
 conv2d_5 (Conv2D) (None, 28, 28, 17) 4913 
 conv2d_6 (Conv2D) (None, 28, 28, 13) 2002 
 conv2d_7 (Conv2D) (None, 28, 28, 7) 826 
=================================================================
Total params: 10,173
Trainable params: 10,173
Non-trainable params: 0
_________________________________________________________________
8/25/24, 10:55 PM CNN_Parameter_Calculation.ipynb - Colab
https://colab.research.google.com/drive/1mWHU1iNhx8gI2KeRs-9KLWFjCVAeGx7Y#scrollTo=SfZZ_avdRxru&printMode=true 1/3
model = Sequential()
model.add(Conv2D(32, input_shape=(28,28,3),
kernel_size = (5,5),
use_bias=False))
model.add(Conv2D(17, (3,3), use_bias=False))
model.add(Conv2D(13, (3,3), use_bias=False))
model.add(Conv2D(7, (3,3), use_bias=False))
model.compile(loss = 'categorical_crossentropy', optimizer='adam')
model.summary()
Model: "sequential_2"
_________________________________________________________________
 Layer (type) Output Shape Param # 
=================================================================
 conv2d_8 (Conv2D) (None, 24, 24, 32) 2400 
 
 conv2d_9 (Conv2D) (None, 22, 22, 17) 4896 
 conv2d_10 (Conv2D) (None, 20, 20, 13) 1989 
 conv2d_11 (Conv2D) (None, 18, 18, 7) 819 
=================================================================
Total params: 10,104
Trainable params: 10,104
Non-trainable params: 0
_________________________________________________________________
model = Sequential()
model.add(Conv2D(32, input_shape=(28,28,3),
kernel_size = (5,5),
padding='valid',
use_bias=False))
model.add(Conv2D(17, (3,3), padding='valid', use_bias=False))
model.add(Conv2D(13, (3,3), padding='valid', use_bias=False))
model.add(Conv2D(7, (3,3), padding='valid', use_bias=False))
model.compile(loss = 'categorical_crossentropy', optimizer='adam')
model.summary()
Model: "sequential_3"
_________________________________________________________________
 Layer (type) Output Shape Param # 
=================================================================
 conv2d_12 (Conv2D) (None, 24, 24, 32) 2400 
 
 conv2d_13 (Conv2D) (None, 22, 22, 17) 4896 
 conv2d_14 (Conv2D) (None, 20, 20, 13) 1989 
 conv2d_15 (Conv2D) (None, 18, 18, 7) 819 
=================================================================
Total params: 10,104
Trainable params: 10,104
Non-trainable params: 0
_________________________________________________________________
model = Sequential()
model.add(Conv2D(10, input_shape=(28,28,3),
kernel_size = (5,5),
strides = (1,1),
padding='valid',
use_bias=False))
model.add(Conv2D(20, (5,5), (2,2), padding='valid', use_bias=False))
model.add(Conv2D(40, (5,5), (2,2), padding='valid', use_bias=False))
model.compile(loss = 'categorical_crossentropy', optimizer='adam')
model.summary()
Model: "sequential_4"
_________________________________________________________________
 Layer (type) Output Shape Param # 
=================================================================
8/25/24, 10:55 PM CNN_Parameter_Calculation.ipynb - Colab
https://colab.research.google.com/drive/1mWHU1iNhx8gI2KeRs-9KLWFjCVAeGx7Y#scrollTo=SfZZ_avdRxru&printMode=true 2/3
 conv2d_16 (Conv2D) (None, 24, 24, 10) 750 
 
 conv2d_17 (Conv2D) (None, 10, 10, 20) 5000 
 conv2d_18 (Conv2D) (None, 3, 3, 40) 20000 
=================================================================
Total params: 25,750
Trainable params: 25,750
Non-trainable params: 0
_________________________________________________________________
model = Sequential()
model.add(Conv2D(10, input_shape=(39,39,3),
kernel_size = (3,3),
padding='valid',))
model.add(Conv2D(20, (5,5), (2,2), padding='valid' ))
model.add(Conv2D(40, (5,5), (2,2),padding='valid'))
model.compile(loss = 'categorical_crossentropy', optimizer='adam')
model.summary()
Model: "sequential_5"
_________________________________________________________________
 Layer (type) Output Shape Param # 
=================================================================
 conv2d_19 (Conv2D) (None, 37, 37, 10) 280 
 
 conv2d_20 (Conv2D) (None, 17, 17, 20) 5020 
 conv2d_21 (Conv2D) (None, 7, 7, 40) 20040 
=================================================================
Total params: 25,340
Trainable params: 25,340
Non-trainable params: 0
_________________________________________________________________
8/25/24, 10:55 PM CNN_Parameter_Calculation.ipynb - Colab
https://colab.research.google.com/drive/1mWHU1iNhx8gI2KeRs-9KLWFjCVAeGx7Y#scrollTo=SfZZ_avdRxru&printMode=true 3/3
